{"ast":null,"code":"var _jsxFileName = \"/Users/mirmicuper/Desktop/Code/\\u041B\\u0430\\u0431\\u044B 3 \\u0441\\u0435\\u043C/\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447/cp-raect-app2/src/Components/inputs/inputPhone.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport data from '../../Data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputPhone() {\n  _s();\n  const lang = useSelector(state => state.languages.langIS);\n  //инициализация состаяния Phone с помощью useState\n  let dataCurrPage = [data.dataPageRU[12].phone];\n  //обработка языка\n  switch (lang) {\n    case \"ru\":\n      dataCurrPage[0] = data.dataPageRU[12].phone;\n      break;\n    case \"en\":\n      dataCurrPage[0] = data.dataPageEN[12].phone;\n      break;\n    case \"by\":\n      dataCurrPage[0] = data.dataPageBY[12].phone;\n      break;\n    default:\n      break;\n  }\n  const [phone, setPhone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputPhone\",\n      type: \"phone\",\n      placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n      onChange: e => {\n        setPhone(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(InputPhone, \"KDYm/xkSnsOARBf3MLhW4e0YnZw=\", false, function () {\n  return [useSelector];\n});\n_c = InputPhone;\nexport default InputPhone;\nvar _c;\n$RefreshReg$(_c, \"InputPhone\");","map":{"version":3,"names":["React","useState","useSelector","data","InputPhone","lang","state","languages","langIS","dataCurrPage","dataPageRU","phone","dataPageEN","dataPageBY","setPhone","e","target","value"],"sources":["/Users/mirmicuper/Desktop/Code/Лабы 3 сем/Курсач/cp-raect-app2/src/Components/inputs/inputPhone.jsx"],"sourcesContent":["import React from 'react';\nimport {useState} from 'react'\nimport { useSelector } from \"react-redux\";\nimport data from '../../Data.json'\n\nfunction InputPhone() {\n    const lang = useSelector((state) => state.languages.langIS)\n    //инициализация состаяния Phone с помощью useState\n    let dataCurrPage = [\n        data.dataPageRU[12].phone\n    ]\n    //обработка языка\n    switch (lang) {\n        case \"ru\":\n            dataCurrPage[0] = data.dataPageRU[12].phone;\n            break;\n        case \"en\":\n            dataCurrPage[0] = data.dataPageEN[12].phone;\n            break;\n        case \"by\":\n            dataCurrPage[0] = data.dataPageBY[12].phone;\n            break;\n        default:\n            break;\n    }\n    const [phone, setPhone] = useState(\"\")\n    return(\n        <div>\n            <input className=\"inputPhone\" \n            type=\"phone\" \n            placeholder=\"Телефон\"\n            onChange={(e) => {\n                setPhone(e.target.value)\n            }}/>\n        </div>\n    );\n}\n\nexport default InputPhone;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,iBAAiB;AAAA;AAElC,SAASC,UAAU,GAAG;EAAA;EAClB,MAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC;EAC3D;EACA,IAAIC,YAAY,GAAG,CACfN,IAAI,CAACO,UAAU,CAAC,EAAE,CAAC,CAACC,KAAK,CAC5B;EACD;EACA,QAAQN,IAAI;IACR,KAAK,IAAI;MACLI,YAAY,CAAC,CAAC,CAAC,GAAGN,IAAI,CAACO,UAAU,CAAC,EAAE,CAAC,CAACC,KAAK;MAC3C;IACJ,KAAK,IAAI;MACLF,YAAY,CAAC,CAAC,CAAC,GAAGN,IAAI,CAACS,UAAU,CAAC,EAAE,CAAC,CAACD,KAAK;MAC3C;IACJ,KAAK,IAAI;MACLF,YAAY,CAAC,CAAC,CAAC,GAAGN,IAAI,CAACU,UAAU,CAAC,EAAE,CAAC,CAACF,KAAK;MAC3C;IACJ;MACI;EAAM;EAEd,MAAM,CAACA,KAAK,EAAEG,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,oBACI;IAAA,uBACI;MAAO,SAAS,EAAC,YAAY;MAC7B,IAAI,EAAC,OAAO;MACZ,WAAW,EAAC,4CAAS;MACrB,QAAQ,EAAGc,CAAC,IAAK;QACbD,QAAQ,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MAC5B;IAAE;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QACF;AAEd;AAAC,GA/BQb,UAAU;EAAA,QACFF,WAAW;AAAA;AAAA,KADnBE,UAAU;AAiCnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}