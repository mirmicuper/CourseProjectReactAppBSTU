{"ast":null,"code":"var _jsxFileName = \"/Users/mirmicuper/Desktop/Code/\\u041B\\u0430\\u0431\\u044B 3 \\u0441\\u0435\\u043C/\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447/CourseProjectReactAppBSTU/src/ComponentsPage/filterAD.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../Style/filterStyle.css';\nimport data from '../Data.json';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterAD(_ref) {\n  _s();\n  let {\n    onChange\n  } = _ref;\n  //инициализация переменной lang хранящей язык из store\n  const lang = useSelector(state => state.languages.langIS);\n  //функция передачи состояния порядка сортировки из компонента\n  const handleOnChangeSortBy = event => {\n    onChange(event.target.value);\n  };\n  //инициализация состояния dataCurrPage, которое\n  //хранит данные из JSON для текущей страницы\n  let dataCurrPage = [data.dataPageRU[5].asc, data.dataPageRU[5].desc];\n  //обработка языка\n  switch (lang) {\n    case \"en\":\n      dataCurrPage[0] = data.dataPageEN[5].asc;\n      dataCurrPage[1] = data.dataPageEN[5].desc;\n      break;\n    case \"ru\":\n      dataCurrPage[0] = data.dataPageRU[5].asc;\n      dataCurrPage[1] = data.dataPageRU[5].desc;\n      break;\n    case \"by\":\n      dataCurrPage[0] = data.dataPageBY[5].asc;\n      dataCurrPage[1] = data.dataPageBY[5].desc;\n      break;\n    default:\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"sortByAD\",\n      className: \"AD\",\n      id: \"filterSortByAD\",\n      onChange: handleOnChangeSortBy,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"asc\",\n        selected: \"selected\",\n        children: dataCurrPage[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"desc\",\n        children: dataCurrPage[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(FilterAD, \"YX9svgYxZ8mkOt/FPg3Kqpt9At4=\", false, function () {\n  return [useSelector];\n});\n_c = FilterAD;\nvar _c;\n$RefreshReg$(_c, \"FilterAD\");","map":{"version":3,"names":["React","data","useSelector","FilterAD","onChange","lang","state","languages","langIS","handleOnChangeSortBy","event","target","value","dataCurrPage","dataPageRU","asc","desc","dataPageEN","dataPageBY"],"sources":["/Users/mirmicuper/Desktop/Code/Лабы 3 сем/Курсач/CourseProjectReactAppBSTU/src/ComponentsPage/filterAD.jsx"],"sourcesContent":["import React from 'react';\nimport '../Style/filterStyle.css'\nimport data from '../Data.json'\nimport { useSelector } from 'react-redux'\n\nexport default function FilterAD({onChange}) {\n    //инициализация переменной lang хранящей язык из store\n    const lang = useSelector((state) => state.languages.langIS)\n    //функция передачи состояния порядка сортировки из компонента\n    const handleOnChangeSortBy = (event) => {\n        onChange(event.target.value)\n    }\n    //инициализация состояния dataCurrPage, которое\n    //хранит данные из JSON для текущей страницы\n    let dataCurrPage = [\n        data.dataPageRU[5].asc, \n        data.dataPageRU[5].desc\n    ];\n    //обработка языка\n    switch (lang) {\n        case \"en\":\n            dataCurrPage[0] = data.dataPageEN[5].asc;\n            dataCurrPage[1] = data.dataPageEN[5].desc;\n            break;\n        case \"ru\":\n            dataCurrPage[0] = data.dataPageRU[5].asc;\n            dataCurrPage[1] = data.dataPageRU[5].desc;\n            break;\n        case \"by\":\n            dataCurrPage[0] = data.dataPageBY[5].asc;\n            dataCurrPage[1] = data.dataPageBY[5].desc;\n            break;\n        default:\n            break;\n    }\n    return(\n        <div className=\"filter\">\n            <select name=\"sortByAD\" className=\"AD\" id=\"filterSortByAD\" onChange={handleOnChangeSortBy}>\n                <option value=\"asc\" selected=\"selected\">{dataCurrPage[0]}</option>\n                <option value=\"desc\">{dataCurrPage[1]}</option>\n            </select>\n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,OAAOC,IAAI,MAAM,cAAc;AAC/B,SAASC,WAAW,QAAQ,aAAa;AAAA;AAEzC,eAAe,SAASC,QAAQ,OAAa;EAAA;EAAA,IAAZ;IAACC;EAAQ,CAAC;EACvC;EACA,MAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC;EAC3D;EACA,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACpCN,QAAQ,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD;EACA;EACA,IAAIC,YAAY,GAAG,CACfZ,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG,EACtBd,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACE,IAAI,CAC1B;EACD;EACA,QAAQX,IAAI;IACR,KAAK,IAAI;MACLQ,YAAY,CAAC,CAAC,CAAC,GAAGZ,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC,CAACF,GAAG;MACxCF,YAAY,CAAC,CAAC,CAAC,GAAGZ,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC,CAACD,IAAI;MACzC;IACJ,KAAK,IAAI;MACLH,YAAY,CAAC,CAAC,CAAC,GAAGZ,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACC,GAAG;MACxCF,YAAY,CAAC,CAAC,CAAC,GAAGZ,IAAI,CAACa,UAAU,CAAC,CAAC,CAAC,CAACE,IAAI;MACzC;IACJ,KAAK,IAAI;MACLH,YAAY,CAAC,CAAC,CAAC,GAAGZ,IAAI,CAACiB,UAAU,CAAC,CAAC,CAAC,CAACH,GAAG;MACxCF,YAAY,CAAC,CAAC,CAAC,GAAGZ,IAAI,CAACiB,UAAU,CAAC,CAAC,CAAC,CAACF,IAAI;MACzC;IACJ;MACI;EAAM;EAEd,oBACI;IAAK,SAAS,EAAC,QAAQ;IAAA,uBACnB;MAAQ,IAAI,EAAC,UAAU;MAAC,SAAS,EAAC,IAAI;MAAC,EAAE,EAAC,gBAAgB;MAAC,QAAQ,EAAEP,oBAAqB;MAAA,wBACtF;QAAQ,KAAK,EAAC,KAAK;QAAC,QAAQ,EAAC,UAAU;QAAA,UAAEI,YAAY,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU,eAClE;QAAQ,KAAK,EAAC,MAAM;QAAA,UAAEA,YAAY,CAAC,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA;EAC1C;IAAA;IAAA;IAAA;EAAA,QACP;AAEd;AAAC,GAtCuBV,QAAQ;EAAA,QAEfD,WAAW;AAAA;AAAA,KAFJC,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}