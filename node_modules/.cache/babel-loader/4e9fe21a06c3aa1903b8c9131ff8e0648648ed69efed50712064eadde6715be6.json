{"ast":null,"code":"var _jsxFileName = \"/Users/mirmicuper/Desktop/Code/\\u041B\\u0430\\u0431\\u044B 3 \\u0441\\u0435\\u043C/\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447/cp-raect-app2/src/Components/inputs/inputCount.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport data from '../../Data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputCount() {\n  _s();\n  const lang = useSelector(state => state.languages.langIS);\n  //инициализируем константы\n  const numSeats = 20;\n  const countSeats = [];\n  let dataCurrPage = [data.dataPageRU[10].count];\n\n  //заполняем массив\n  for (let i = 0; i < numSeats; i++) {\n    countSeats[i] = i + 1;\n  }\n  //распаковываем массив в option\n  const arrSeat = countSeats.map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n    children: n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this));\n  switch (lang) {\n    case \"ru\":\n      dataCurrPage[0] = data.dataPageRU[10].count;\n      break;\n    case \"en\":\n      dataCurrPage[0] = data.dataPageEN[10].count;\n      break;\n    case \"by\":\n      dataCurrPage[0] = data.dataPageEN[10].count;\n      break;\n    default:\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"inputCount\",\n      children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0447\\u0435\\u043B\\u043E\\u0432\\u0435\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"inputCount\",\n      name: \"inputCount\",\n      id: \"inputCount\",\n      children: arrSeat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(InputCount, \"YX9svgYxZ8mkOt/FPg3Kqpt9At4=\", false, function () {\n  return [useSelector];\n});\n_c = InputCount;\nexport default InputCount;\nvar _c;\n$RefreshReg$(_c, \"InputCount\");","map":{"version":3,"names":["React","useSelector","data","InputCount","lang","state","languages","langIS","numSeats","countSeats","dataCurrPage","dataPageRU","count","i","arrSeat","map","n","dataPageEN"],"sources":["/Users/mirmicuper/Desktop/Code/Лабы 3 сем/Курсач/cp-raect-app2/src/Components/inputs/inputCount.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport data from '../../Data.json'\n\nfunction InputCount() {\n    const lang = useSelector((state) => state.languages.langIS)\n    //инициализируем константы\n    const numSeats = 20;\n    const countSeats = [];\n    let dataCurrPage = [\n        data.dataPageRU[10].count\n    ]\n\n    //заполняем массив\n    for(let i = 0; i < numSeats; i++) {\n        countSeats[i] = i + 1;\n    }\n    //распаковываем массив в option\n    const arrSeat = countSeats.map((n) => \n        <option>{n}</option>\n    )\n    switch (lang) {\n        case \"ru\":\n            dataCurrPage[0] = data.dataPageRU[10].count;\n            break;\n        case \"en\":\n            dataCurrPage[0] = data.dataPageEN[10].count;\n            break;\n        case \"by\":\n            dataCurrPage[0] = data.dataPageEN[10].count;\n            break;\n        default:\n            break;\n    }\n    return(\n        <div>\n            <label htmlFor=\"inputCount\">Количество человек</label>\n            <select className=\"inputCount\" \n                name=\"inputCount\" \n                id=\"inputCount\">\n                {arrSeat}\n            </select>\n        </div>\n    );\n}\n\nexport default InputCount;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,iBAAiB;AAAA;AAElC,SAASC,UAAU,GAAG;EAAA;EAClB,MAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACC,MAAM,CAAC;EAC3D;EACA,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIC,YAAY,GAAG,CACfR,IAAI,CAACS,UAAU,CAAC,EAAE,CAAC,CAACC,KAAK,CAC5B;;EAED;EACA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,EAAEK,CAAC,EAAE,EAAE;IAC9BJ,UAAU,CAACI,CAAC,CAAC,GAAGA,CAAC,GAAG,CAAC;EACzB;EACA;EACA,MAAMC,OAAO,GAAGL,UAAU,CAACM,GAAG,CAAEC,CAAC,iBAC7B;IAAA,UAASA;EAAC;IAAA;IAAA;IAAA;EAAA,QAAU,CACvB;EACD,QAAQZ,IAAI;IACR,KAAK,IAAI;MACLM,YAAY,CAAC,CAAC,CAAC,GAAGR,IAAI,CAACS,UAAU,CAAC,EAAE,CAAC,CAACC,KAAK;MAC3C;IACJ,KAAK,IAAI;MACLF,YAAY,CAAC,CAAC,CAAC,GAAGR,IAAI,CAACe,UAAU,CAAC,EAAE,CAAC,CAACL,KAAK;MAC3C;IACJ,KAAK,IAAI;MACLF,YAAY,CAAC,CAAC,CAAC,GAAGR,IAAI,CAACe,UAAU,CAAC,EAAE,CAAC,CAACL,KAAK;MAC3C;IACJ;MACI;EAAM;EAEd,oBACI;IAAA,wBACI;MAAO,OAAO,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eACtD;MAAQ,SAAS,EAAC,YAAY;MAC1B,IAAI,EAAC,YAAY;MACjB,EAAE,EAAC,YAAY;MAAA,UACdE;IAAO;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAEd;AAAC,GAxCQX,UAAU;EAAA,QACFF,WAAW;AAAA;AAAA,KADnBE,UAAU;AA0CnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}