{"ast":null,"code":"var _jsxFileName = \"/Users/mirmicuper/Desktop/Code/\\u041B\\u0430\\u0431\\u044B 3 \\u0441\\u0435\\u043C/\\u041A\\u0443\\u0440\\u0441\\u0430\\u0447/cp-raect-app2/src/ComponentsPage/headerRel.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport data from '../Data.json';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SelectLang from '../Components/selectLang';\nimport '../Style/rel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeaderRel_PQWERTY(props) {\n  _s();\n  let currLogo;\n  //массив логотипов\n  let arrImg = [require('../images/logo.png'),\n  // black logo\n  require('../images/logo2.png') // light logo \n  ];\n  //обработка цвета логотипа\n  props.color == \"1\" ? currLogo = arrImg[1] : currLogo = arrImg[0];\n  //инициализация переменной lang хранящей язык из store\n  const lang = useSelector(state => state.languages.langIS);\n  //инициализация состояния dataCurrPage, которое\n  //хранит данные из JSON для текущей страницы\n  let dataCurrPage = [data.dataPageRU[6].a1, data.dataPageRU[6].a2, data.dataPageRU[6].a3];\n  //обработка языка\n  switch (lang) {\n    case \"en\":\n      dataCurrPage[0] = data.dataPageEN[6].a1;\n      dataCurrPage[1] = data.dataPageEN[6].a2;\n      dataCurrPage[2] = data.dataPageEN[6].a3;\n      break;\n    case \"ru\":\n      dataCurrPage[0] = data.dataPageRU[6].a1;\n      dataCurrPage[1] = data.dataPageRU[6].a2;\n      dataCurrPage[2] = data.dataPageRU[6].a3;\n      break;\n    case \"by\":\n      dataCurrPage[0] = data.dataPageBY[6].a1;\n      dataCurrPage[1] = data.dataPageBY[6].a2;\n      dataCurrPage[2] = data.dataPageBY[6].a3;\n      break;\n    default:\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"headerClassRel\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"logo\",\n      src: currLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerLinksRel\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: dataCurrPage[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: dataCurrPage[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: dataCurrPage[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectLang, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(HeaderRel_PQWERTY, \"YX9svgYxZ8mkOt/FPg3Kqpt9At4=\", false, function () {\n  return [useSelector];\n});\n_c = HeaderRel_PQWERTY;\nexport default HeaderRel_PQWERTY;\nvar _c;\n$RefreshReg$(_c, \"HeaderRel_PQWERTY\");","map":{"version":3,"names":["React","data","useSelector","Link","SelectLang","HeaderRel_PQWERTY","props","currLogo","arrImg","require","color","lang","state","languages","langIS","dataCurrPage","dataPageRU","a1","a2","a3","dataPageEN","dataPageBY"],"sources":["/Users/mirmicuper/Desktop/Code/Лабы 3 сем/Курсач/cp-raect-app2/src/ComponentsPage/headerRel.jsx"],"sourcesContent":["import React from 'react';\nimport data from '../Data.json'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport SelectLang from '../Components/selectLang'\nimport '../Style/rel.css';\n\nfunction HeaderRel_PQWERTY(props) {\n    let currLogo;\n    //массив логотипов\n    let arrImg = [\n        require('../images/logo.png'), // black logo\n        require('../images/logo2.png') // light logo \n    ];\n    //обработка цвета логотипа\n    props.color == \"1\" ? currLogo = arrImg[1] : currLogo = arrImg[0];\n    //инициализация переменной lang хранящей язык из store\n    const lang = useSelector((state) => state.languages.langIS)\n    //инициализация состояния dataCurrPage, которое\n    //хранит данные из JSON для текущей страницы\n    let dataCurrPage = [\n        data.dataPageRU[6].a1, \n        data.dataPageRU[6].a2, \n        data.dataPageRU[6].a3\n    ];\n    //обработка языка\n    switch (lang) {\n        case \"en\":\n            dataCurrPage[0] = data.dataPageEN[6].a1\n            dataCurrPage[1] = data.dataPageEN[6].a2\n            dataCurrPage[2] = data.dataPageEN[6].a3\n            break;\n        case \"ru\":\n            dataCurrPage[0] = data.dataPageRU[6].a1\n            dataCurrPage[1] = data.dataPageRU[6].a2\n            dataCurrPage[2] = data.dataPageRU[6].a3\n            break;\n        case \"by\":\n            dataCurrPage[0] = data.dataPageBY[6].a1\n            dataCurrPage[1] = data.dataPageBY[6].a2\n            dataCurrPage[2] = data.dataPageBY[6].a3\n            break;\n        default:\n            break;\n    }\n    return(\n        <header className=\"headerClassRel\">\n            <img alt=\"logo\" src={currLogo}/>\n            <div className=\"headerLinksRel\">\n                <Link to=\"/\">{dataCurrPage[0]}</Link>\n                <Link to=\"/\">{dataCurrPage[1]}</Link>\n                <Link to=\"/\">{dataCurrPage[2]}</Link>\n            </div>\n            <SelectLang />\n        </header>   \n    );\n}\nexport default HeaderRel_PQWERTY;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}